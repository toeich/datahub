package de.jworks.datahub.presentation.views;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class HomeView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout footer;
	@AutoGenerated
	private Label label_footer1;
	@AutoGenerated
	private VerticalLayout body;
	@AutoGenerated
	private HorizontalLayout header;
	@AutoGenerated
	private TextField textField_search;
	@AutoGenerated
	private Button button_groups;
	@AutoGenerated
	private Button button_datasets;
	@AutoGenerated
	private Label label_logo;
	@AutoGenerated
	private Embedded embedded_logo;
	@AutoGenerated
	private HorizontalLayout accountHeader;
	@AutoGenerated
	private Button button_logout;
	@AutoGenerated
	private Button button_editProfile;
	@AutoGenerated
	private Button button_dashboard;
	@AutoGenerated
	private Button button_viewProfile;
	@AutoGenerated
	private Button button_register;
	@AutoGenerated
	private Button button_login;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public HomeView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		// TODO add user code here
		button_dashboard.setVisible(false);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// accountHeader
		accountHeader = buildAccountHeader();
		mainLayout.addComponent(accountHeader);
		mainLayout.setComponentAlignment(accountHeader, new Alignment(34));
		
		// header
		header = buildHeader();
		mainLayout.addComponent(header);
		
		// body
		body = new VerticalLayout();
		body.setImmediate(false);
		body.setWidth("100.0%");
		body.setHeight("-1px");
		body.setMargin(false);
		mainLayout.addComponent(body);
		
		// footer
		footer = buildFooter();
		mainLayout.addComponent(footer);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildAccountHeader() {
		// common part: create layout
		accountHeader = new HorizontalLayout();
		accountHeader.setImmediate(false);
		accountHeader.setWidth("-1px");
		accountHeader.setHeight("-1px");
		accountHeader.setMargin(false);
		accountHeader.setSpacing(true);
		
		// button_login
		button_login = new Button();
		button_login.setCaption("Login");
		button_login.setImmediate(true);
		button_login.setWidth("-1px");
		button_login.setHeight("-1px");
		accountHeader.addComponent(button_login);
		accountHeader.setComponentAlignment(button_login, new Alignment(48));
		
		// button_register
		button_register = new Button();
		button_register.setCaption("Register");
		button_register.setImmediate(true);
		button_register.setWidth("-1px");
		button_register.setHeight("-1px");
		accountHeader.addComponent(button_register);
		accountHeader.setComponentAlignment(button_register, new Alignment(48));
		
		// button_viewProfile
		button_viewProfile = new Button();
		button_viewProfile.setCaption("View Profile");
		button_viewProfile.setIcon(new ThemeResource(
				"../runo/icons/16/user.png"));
		button_viewProfile.setImmediate(false);
		button_viewProfile.setWidth("-1px");
		button_viewProfile.setHeight("-1px");
		accountHeader.addComponent(button_viewProfile);
		accountHeader.setComponentAlignment(button_viewProfile, new Alignment(
				48));
		
		// button_dashboard
		button_dashboard = new Button();
		button_dashboard.setCaption("Dashboard");
		button_dashboard.setImmediate(false);
		button_dashboard.setWidth("-1px");
		button_dashboard.setHeight("-1px");
		accountHeader.addComponent(button_dashboard);
		accountHeader
				.setComponentAlignment(button_dashboard, new Alignment(48));
		
		// button_editProfile
		button_editProfile = new Button();
		button_editProfile.setCaption("Edit Profile");
		button_editProfile.setImmediate(false);
		button_editProfile.setWidth("-1px");
		button_editProfile.setHeight("-1px");
		accountHeader.addComponent(button_editProfile);
		accountHeader.setComponentAlignment(button_editProfile, new Alignment(
				48));
		
		// button_logout
		button_logout = new Button();
		button_logout.setCaption("Log out");
		button_logout.setImmediate(false);
		button_logout.setWidth("-1px");
		button_logout.setHeight("-1px");
		accountHeader.addComponent(button_logout);
		accountHeader.setComponentAlignment(button_logout, new Alignment(48));
		
		return accountHeader;
	}

	@AutoGenerated
	private HorizontalLayout buildHeader() {
		// common part: create layout
		header = new HorizontalLayout();
		header.setImmediate(false);
		header.setWidth("100.0%");
		header.setHeight("-1px");
		header.setMargin(false);
		header.setSpacing(true);
		
		// embedded_logo
		embedded_logo = new Embedded();
		embedded_logo.setImmediate(false);
		embedded_logo.setWidth("-1px");
		embedded_logo.setHeight("-1px");
		embedded_logo.setSource(new ThemeResource(
				"../runo/icons/64/document.png"));
		embedded_logo.setType(1);
		embedded_logo.setMimeType("image/png");
		header.addComponent(embedded_logo);
		header.setComponentAlignment(embedded_logo, new Alignment(48));
		
		// label_logo
		label_logo = new Label();
		label_logo.setStyleName("h1");
		label_logo.setImmediate(false);
		label_logo.setWidth("-1px");
		label_logo.setHeight("-1px");
		label_logo.setValue("connector");
		header.addComponent(label_logo);
		header.setExpandRatio(label_logo, 1.0f);
		header.setComponentAlignment(label_logo, new Alignment(33));
		
		// button_datasets
		button_datasets = new Button();
		button_datasets.setCaption("Datasets");
		button_datasets.setImmediate(true);
		button_datasets.setWidth("-1px");
		button_datasets.setHeight("-1px");
		header.addComponent(button_datasets);
		header.setComponentAlignment(button_datasets, new Alignment(48));
		
		// button_groups
		button_groups = new Button();
		button_groups.setCaption("Groups");
		button_groups.setImmediate(true);
		button_groups.setWidth("-1px");
		button_groups.setHeight("-1px");
		header.addComponent(button_groups);
		header.setComponentAlignment(button_groups, new Alignment(48));
		
		// textField_search
		textField_search = new TextField();
		textField_search.setStyleName("search");
		textField_search.setImmediate(false);
		textField_search.setWidth("-1px");
		textField_search.setHeight("-1px");
		textField_search.setInputPrompt("Search");
		header.addComponent(textField_search);
		header.setComponentAlignment(textField_search, new Alignment(48));
		
		return header;
	}

	@AutoGenerated
	private HorizontalLayout buildFooter() {
		// common part: create layout
		footer = new HorizontalLayout();
		footer.setImmediate(false);
		footer.setWidth("100.0%");
		footer.setHeight("-1px");
		footer.setMargin(false);
		
		// label_footer1
		label_footer1 = new Label();
		label_footer1.setImmediate(false);
		label_footer1.setWidth("-1px");
		label_footer1.setHeight("-1px");
		label_footer1.setValue("connector - (c) 2014 jworks.de");
		footer.addComponent(label_footer1);
		footer.setComponentAlignment(label_footer1, new Alignment(34));
		
		return footer;
	}

}
