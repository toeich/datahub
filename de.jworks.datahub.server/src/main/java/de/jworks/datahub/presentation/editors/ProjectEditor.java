package de.jworks.datahub.presentation.editors;

import java.io.Serializable;

import javax.annotation.PostConstruct;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.util.ReflectTools;

import de.jworks.datahub.business.projects.entity.Project;

public class ProjectEditor extends CustomComponent {

    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    @AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout buttons;
	@AutoGenerated
	private Button cancelButton;
	@AutoGenerated
	private Button okButton;
	@AutoGenerated
	private TextArea description;
	@AutoGenerated
	private TextField name;
	
	public ProjectEditor(final Project project) {
        buildMainLayout();
        setCompositionRoot(mainLayout);

        name.setNullRepresentation(null);
        description.setNullRepresentation(null);

        final FieldGroup fieldGroup = new FieldGroup();
        fieldGroup.setItemDataSource(new BeanItem<Project>(project));
        fieldGroup.bindMemberFields(this);

        okButton.addClickListener(new ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                try {
                    fieldGroup.commit();
                    fireEvent(new SaveEvent(ProjectEditor.this, project));
                } catch (CommitException e) {
                    e.printStackTrace();
                }
            }
        });
        cancelButton.addClickListener(new ClickListener() {
            @Override
            public void buttonClick(ClickEvent event) {
                fieldGroup.discard();
                fireEvent(new SaveEvent(ProjectEditor.this, null));
            }
        });
    }

	@PostConstruct
	public void refresh() {
	}
	
    public static class SaveEvent extends Event {
        
        private Project project;

        public SaveEvent(Component source, Project project) {
            super(source);
            
            this.project = project;
        }
        
        public Project getProject() {
            return project;
        }
        
    }
    
    public interface SaveListener extends Serializable {
        
        public void save(SaveEvent event);
        
    }

    public void addSaveListener(SaveListener listener) {
        addListener(SaveEvent.class, listener, ReflectTools.findMethod(SaveListener.class, "save", SaveEvent.class));
    }
    
    public void removeSaveListener(SaveListener listener) {
        removeListener(SaveEvent.class, listener, ReflectTools.findMethod(SaveListener.class, "save", SaveEvent.class));
    }

    @AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("500px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("500px");
		setHeight("-1px");
		
		// name
		name = new TextField();
		name.setCaption("Name:");
		name.setImmediate(false);
		name.setWidth("100.0%");
		name.setHeight("-1px");
		name.setRequired(true);
		mainLayout.addComponent(name);
		
		// description
		description = new TextArea();
		description.setCaption("Description:");
		description.setImmediate(false);
		description.setWidth("100.0%");
		description.setHeight("-1px");
		mainLayout.addComponent(description);
		
		// buttons
		buttons = buildButtons();
		mainLayout.addComponent(buttons);
		mainLayout.setComponentAlignment(buttons, new Alignment(10));
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildButtons() {
		// common part: create layout
		buttons = new HorizontalLayout();
		buttons.setImmediate(false);
		buttons.setWidth("-1px");
		buttons.setHeight("-1px");
		buttons.setMargin(false);
		buttons.setSpacing(true);
		
		// okButton
		okButton = new Button();
		okButton.setStyleName("primary");
		okButton.setCaption("OK");
		okButton.setImmediate(true);
		okButton.setWidth("-1px");
		okButton.setHeight("-1px");
		buttons.addComponent(okButton);
		
		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("Cancel");
		cancelButton.setImmediate(true);
		cancelButton.setWidth("-1px");
		cancelButton.setHeight("-1px");
		buttons.addComponent(cancelButton);
		
		return buttons;
	}

}
