package de.jworks.datahub.presentation.user;

import java.util.Arrays;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;

import com.porotype.iconfont.FontAwesome.Icon;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

import de.jworks.datahub.business.datasets.boundary.DatasetService;
import de.jworks.datahub.business.datasets.entity.Dataset;
import de.jworks.datahub.business.datasets.entity.DatasetGroup;
import de.jworks.datahub.presentation.Messages;
import de.jworks.datahub.presentation.UserUI;

@CDIView(value = "datasetgroup", supportsParameters = true, uis = { UserUI.class })
public class DatasetGroupView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout body;
	@AutoGenerated
	private TabSheet tabSheet;
	@AutoGenerated
	private VerticalLayout aboutTab;
	@AutoGenerated
	private Label aboutText;
	@AutoGenerated
	private VerticalLayout datasetsTab;
	@AutoGenerated
	private Table datasetsTable;
	@AutoGenerated
	private VerticalLayout infoPanel;
	@AutoGenerated
	private Label datasetGroupDescription;
	@AutoGenerated
	private Label datasetGroupName;
	@AutoGenerated
	private Label label;
	
	@Inject
	DatasetService datasetService;
	
	private BeanItemContainer<Dataset> datasets = new BeanItemContainer<Dataset>(Dataset.class);
	
	private DatasetGroup datasetGroup;
	
	public DatasetGroupView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		Messages.translate(this);

		label.setContentMode(ContentMode.HTML);
		
		infoPanel.addLayoutClickListener(new LayoutClickListener() {
			@Override
			public void layoutClick(LayoutClickEvent event) {
				tabSheet.setSelectedTab(aboutTab);
			}
		});
		
		datasetsTab.setMargin(new MarginInfo(true, false, false, false));
		datasetsTable.setContainerDataSource(datasets, Arrays.asList("id"));
		datasetsTable.addItemClickListener(new ItemClickListener() {
			@Override
			public void itemClick(ItemClickEvent event) {
				Dataset dataset = datasets.getItem(event.getItemId()).getBean();
				UI.getCurrent().getNavigator().navigateTo("dataset/" + dataset.getId());
			}
		});
		
		aboutText.setContentMode(ContentMode.HTML);
	}
	
	@Override
	public void enter(ViewChangeEvent event) {
		try {
			long datasetGroupId = Long.parseLong(event.getParameters());
			datasetGroup = datasetService.getDatasetGroup(datasetGroupId);
			label.setValue(Icon.home + " / Dataset Groups / " + datasetGroup.getName());

			datasetGroupName.setValue(datasetGroup.getName());
			datasetGroupDescription.setValue(StringUtils.abbreviate(datasetGroup.getDescription(), 100));

			aboutText.setValue(datasetGroup.getDescription()); // TODO

			refreshDatasetsTable();
		} catch (Exception e) {
			UI.getCurrent().getNavigator().navigateTo("alldatasetgroups");
		}
	}

	private void refreshDatasetsTable() {
		datasets.removeAllItems();
		datasets.addAll(datasetService.getDatasets(datasetGroup));
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setStyleName("blue");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// label
		label = new Label();
		label.setStyleName("h2");
		label.setImmediate(false);
		label.setWidth("-1px");
		label.setHeight("-1px");
		label.setValue("Home / Dataset Groups / Dataset Group");
		mainLayout.addComponent(label);
		
		// body
		body = buildBody();
		mainLayout.addComponent(body);
		mainLayout.setExpandRatio(body, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildBody() {
		// common part: create layout
		body = new HorizontalLayout();
		body.setStyleName("white");
		body.setImmediate(false);
		body.setWidth("100.0%");
		body.setHeight("100.0%");
		body.setMargin(true);
		body.setSpacing(true);
		
		// infoPanel
		infoPanel = buildInfoPanel();
		body.addComponent(infoPanel);
		
		// tabSheet
		tabSheet = buildTabSheet();
		body.addComponent(tabSheet);
		body.setExpandRatio(tabSheet, 1.0f);
		
		return body;
	}

	@AutoGenerated
	private VerticalLayout buildInfoPanel() {
		// common part: create layout
		infoPanel = new VerticalLayout();
		infoPanel.setImmediate(false);
		infoPanel.setWidth("200px");
		infoPanel.setHeight("-1px");
		infoPanel.setMargin(false);
		
		// datasetGroupName
		datasetGroupName = new Label();
		datasetGroupName.setStyleName("h1");
		datasetGroupName.setImmediate(false);
		datasetGroupName.setWidth("100.0%");
		datasetGroupName.setHeight("-1px");
		datasetGroupName.setValue("Dataset Group Name");
		infoPanel.addComponent(datasetGroupName);
		
		// datasetGroupDescription
		datasetGroupDescription = new Label();
		datasetGroupDescription.setImmediate(false);
		datasetGroupDescription.setWidth("100.0%");
		datasetGroupDescription.setHeight("-1px");
		datasetGroupDescription.setValue("Dataset Group Description");
		infoPanel.addComponent(datasetGroupDescription);
		
		return infoPanel;
	}

	@AutoGenerated
	private TabSheet buildTabSheet() {
		// common part: create layout
		tabSheet = new TabSheet();
		tabSheet.setStyleName("minimal");
		tabSheet.setImmediate(true);
		tabSheet.setWidth("100.0%");
		tabSheet.setHeight("100.0%");
		
		// datasetsTab
		datasetsTab = buildDatasetsTab();
		tabSheet.addTab(datasetsTab, "Datasets", null);
		
		// aboutTab
		aboutTab = buildAboutTab();
		tabSheet.addTab(aboutTab, "About", null);
		
		return tabSheet;
	}

	@AutoGenerated
	private VerticalLayout buildDatasetsTab() {
		// common part: create layout
		datasetsTab = new VerticalLayout();
		datasetsTab.setImmediate(false);
		datasetsTab.setWidth("100.0%");
		datasetsTab.setHeight("100.0%");
		datasetsTab.setMargin(true);
		datasetsTab.setSpacing(true);
		
		// datasetsTable
		datasetsTable = new Table();
		datasetsTable.setImmediate(false);
		datasetsTable.setWidth("100.0%");
		datasetsTable.setHeight("100.0%");
		datasetsTab.addComponent(datasetsTable);
		datasetsTab.setExpandRatio(datasetsTable, 1.0f);
		
		return datasetsTab;
	}

	@AutoGenerated
	private VerticalLayout buildAboutTab() {
		// common part: create layout
		aboutTab = new VerticalLayout();
		aboutTab.setImmediate(false);
		aboutTab.setWidth("100.0%");
		aboutTab.setHeight("100.0%");
		aboutTab.setMargin(true);
		
		// aboutText
		aboutText = new Label();
		aboutText.setImmediate(false);
		aboutText.setWidth("-1px");
		aboutText.setHeight("-1px");
		aboutText.setValue("About Text");
		aboutTab.addComponent(aboutText);
		
		return aboutTab;
	}

}
