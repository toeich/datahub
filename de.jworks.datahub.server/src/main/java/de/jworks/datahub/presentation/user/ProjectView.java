package de.jworks.datahub.presentation.user;

import java.util.Arrays;

import javax.inject.Inject;

import org.apache.commons.lang.StringUtils;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.cdi.CDIView;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

import de.jworks.datahub.business.common.entity.Project;
import de.jworks.datahub.business.datasets.boundary.DatasetService;
import de.jworks.datahub.business.datasets.entity.DatasetGroup;
import de.jworks.datahub.business.projects.boundary.ProjectService;
import de.jworks.datahub.presentation.Messages;
import de.jworks.datahub.presentation.UserUI;

@CDIView(value = "project!", supportsParameters = true, uis = { UserUI.class })
public class ProjectView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout body;
	@AutoGenerated
	private TabSheet tabSheet;
	@AutoGenerated
	private VerticalLayout aboutTab;
	@AutoGenerated
	private Label aboutText;
	@AutoGenerated
	private VerticalLayout datasetGroupsTab;
	@AutoGenerated
	private Table datasetGroupsTable;
	@AutoGenerated
	private VerticalLayout infoPanel;
	@AutoGenerated
	private Label projectDescription;
	@AutoGenerated
	private Label projectName;
	@AutoGenerated
	private Label label;
	
	@Inject
	ProjectService projectService;
	
	@Inject
	DatasetService datasetService;
	
	private Project project;
	
	BeanItemContainer<DatasetGroup> datasetGroups = new BeanItemContainer<DatasetGroup>(DatasetGroup.class);
	
	public ProjectView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		infoPanel.addLayoutClickListener(new LayoutClickListener() {
			@Override
			public void layoutClick(LayoutClickEvent event) {
				tabSheet.setSelectedTab(aboutTab);
			}
		});
		
		datasetGroupsTab.setMargin(new MarginInfo(true, false, false, false));
		
		datasetGroupsTable.setContainerDataSource(datasetGroups, Arrays.asList("name", "description"));
		datasetGroupsTable.addItemClickListener(new ItemClickListener() {
			@Override
			public void itemClick(ItemClickEvent event) {
				DatasetGroup datasetGroup = datasetGroups.getItem(event.getItemId()).getBean();
				UI.getCurrent().getNavigator().navigateTo("datasetgroup!/" + datasetGroup.getId());
			}
		});
		
		aboutTab.setMargin(new MarginInfo(true, false, false, false));
		
		Messages.translate(this);
	}

	@Override
	public void enter(ViewChangeEvent event) {
		try {
			long projectId = Long.parseLong(event.getParameters());
			project = projectService.getProject(projectId);
			label.setValue(Messages.format(this, "label_value", project.getName()));

			projectName.setValue(project.getName());
			projectDescription.setValue(StringUtils.abbreviate(project.getDescription(), 100));

			aboutText.setValue(project.getDescription()); // TODO
			
			refreshDatasetGroupsTable();
		} catch (Exception e) {
			UI.getCurrent().getNavigator().navigateTo("projects!/");
		}
	}
	
	private void refreshDatasetGroupsTable() {
		datasetGroups.removeAllItems();
		datasetGroups.addAll(datasetService.getDatasetGroups(project));
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setStyleName("blue");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// label
		label = new Label();
		label.setStyleName("h2");
		label.setImmediate(false);
		label.setWidth("-1px");
		label.setHeight("-1px");
		label.setValue("Home / Projects / Project");
		mainLayout.addComponent(label);
		
		// body
		body = buildBody();
		mainLayout.addComponent(body);
		mainLayout.setExpandRatio(body, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildBody() {
		// common part: create layout
		body = new HorizontalLayout();
		body.setStyleName("white");
		body.setImmediate(false);
		body.setWidth("100.0%");
		body.setHeight("100.0%");
		body.setMargin(true);
		body.setSpacing(true);
		
		// infoPanel
		infoPanel = buildInfoPanel();
		body.addComponent(infoPanel);
		
		// tabSheet
		tabSheet = buildTabSheet();
		body.addComponent(tabSheet);
		body.setExpandRatio(tabSheet, 1.0f);
		
		return body;
	}

	@AutoGenerated
	private VerticalLayout buildInfoPanel() {
		// common part: create layout
		infoPanel = new VerticalLayout();
		infoPanel.setImmediate(false);
		infoPanel.setWidth("200px");
		infoPanel.setHeight("-1px");
		infoPanel.setMargin(false);
		
		// projectName
		projectName = new Label();
		projectName.setStyleName("h1");
		projectName.setImmediate(false);
		projectName.setWidth("-1px");
		projectName.setHeight("-1px");
		projectName.setValue("Project Name");
		infoPanel.addComponent(projectName);
		
		// projectDescription
		projectDescription = new Label();
		projectDescription.setImmediate(false);
		projectDescription.setWidth("-1px");
		projectDescription.setHeight("-1px");
		projectDescription.setValue("Project Description");
		infoPanel.addComponent(projectDescription);
		
		return infoPanel;
	}

	@AutoGenerated
	private TabSheet buildTabSheet() {
		// common part: create layout
		tabSheet = new TabSheet();
		tabSheet.setStyleName("minimal");
		tabSheet.setImmediate(true);
		tabSheet.setWidth("100.0%");
		tabSheet.setHeight("100.0%");
		
		// datasetGroupsTab
		datasetGroupsTab = buildDatasetGroupsTab();
		tabSheet.addTab(datasetGroupsTab, "Dataset Groups", null);
		
		// aboutTab
		aboutTab = buildAboutTab();
		tabSheet.addTab(aboutTab, "About", null);
		
		return tabSheet;
	}

	@AutoGenerated
	private VerticalLayout buildDatasetGroupsTab() {
		// common part: create layout
		datasetGroupsTab = new VerticalLayout();
		datasetGroupsTab.setImmediate(false);
		datasetGroupsTab.setWidth("100.0%");
		datasetGroupsTab.setHeight("100.0%");
		datasetGroupsTab.setMargin(true);
		datasetGroupsTab.setSpacing(true);
		
		// datasetGroupsTable
		datasetGroupsTable = new Table();
		datasetGroupsTable.setImmediate(false);
		datasetGroupsTable.setWidth("100.0%");
		datasetGroupsTable.setHeight("100.0%");
		datasetGroupsTab.addComponent(datasetGroupsTable);
		datasetGroupsTab.setExpandRatio(datasetGroupsTable, 1.0f);
		
		return datasetGroupsTab;
	}

	@AutoGenerated
	private VerticalLayout buildAboutTab() {
		// common part: create layout
		aboutTab = new VerticalLayout();
		aboutTab.setImmediate(false);
		aboutTab.setWidth("100.0%");
		aboutTab.setHeight("100.0%");
		aboutTab.setMargin(true);
		
		// aboutText
		aboutText = new Label();
		aboutText.setImmediate(false);
		aboutText.setWidth("-1px");
		aboutText.setHeight("-1px");
		aboutText.setValue("About Text");
		aboutTab.addComponent(aboutText);
		
		return aboutTab;
	}

}
