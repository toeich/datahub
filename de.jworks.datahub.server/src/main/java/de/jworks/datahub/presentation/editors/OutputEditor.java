package de.jworks.datahub.presentation.editors;

import java.io.Serializable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.util.ReflectTools;

import de.jworks.datahub.business.transform.entity.ItemType;
import de.jworks.datahub.business.transform.entity.Output;
import de.jworks.datahub.presentation.Messages;

public class OutputEditor extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private ComboBox type;
	@AutoGenerated
	private TextField step;
	@AutoGenerated
	private TextField name;
	
	public OutputEditor(Output output) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		Messages.translate(this);
		
		// send changed event when name is changed
		name.setImmediate(true);
		name.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(Property.ValueChangeEvent event) {
				fireEvent(new ChangedEvent(OutputEditor.this));
			}
		});
		
		// fill type combo box
		type.addContainerProperty("displayName", String.class, null);
		type.addItem(ItemType.XML_ELEMENT).getItemProperty("displayName").setValue("XML Element");
		type.addItem(ItemType.XML_ATTRIBUTE).getItemProperty("displayName").setValue("XML Attribute");
		type.setItemCaptionPropertyId("displayName");

		// bind fields (not buffered)
		FieldGroup fieldGroup = new FieldGroup(new BeanItem<Output>(output));
		fieldGroup.setBuffered(false);
		fieldGroup.bindMemberFields(this);
	}

	public static class ChangedEvent extends Event {
		
		public ChangedEvent(Component source) {
			super(source);
		}
		
	}
	
	public interface ChangedListener extends Serializable {
		
		public void changed(ChangedEvent event);
		
	}

	public void addChangedListener(ChangedListener listener) {
		addListener(ChangedEvent.class, listener, ReflectTools.findMethod(ChangedListener.class, "changed", ChangedEvent.class));
	}
	
	public void removeChangedListener(ChangedListener listener) {
		removeListener(ChangedEvent.class, listener, ReflectTools.findMethod(ChangedListener.class, "changed", ChangedEvent.class));
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// name
		name = new TextField();
		name.setCaption("Name:");
		name.setImmediate(false);
		name.setWidth("100.0%");
		name.setHeight("-1px");
		name.setRequired(true);
		name.setInputPrompt("Name");
		mainLayout.addComponent(name);
		
		// step
		step = new TextField();
		step.setCaption("Step:");
		step.setImmediate(false);
		step.setWidth("100.0%");
		step.setHeight("-1px");
		step.setRequired(true);
		mainLayout.addComponent(step);
		
		// type
		type = new ComboBox();
		type.setCaption("Type:");
		type.setImmediate(false);
		type.setWidth("100.0%");
		type.setHeight("-1px");
		mainLayout.addComponent(type);
		
		return mainLayout;
	}

}
